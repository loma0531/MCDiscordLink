package legacy.discordlink.config

import org.bukkit.configuration.file.FileConfiguration
import org.bukkit.configuration.file.YamlConfiguration
import org.bukkit.plugin.java.JavaPlugin
import java.io.File

class MessageManager(private val plugin: JavaPlugin) {
    private val messagesFile = File(plugin.dataFolder, "messages.yml")
    private var messages: FileConfiguration

    init {
        if (!plugin.dataFolder.exists()) plugin.dataFolder.mkdirs()
        if (!messagesFile.exists()) {
            plugin.saveResource("messages.yml", false)
        }
        messages = YamlConfiguration.loadConfiguration(messagesFile)
    }
    
    fun reloadMessages() {
        messages = YamlConfiguration.loadConfiguration(messagesFile)
    }
    
    private fun getMessage(path: String, default: String): String {
        return messages.getString(path, default) ?: default
    }
    
    // Discord Bot Messages
    fun getCheckAccountsButton(): String = getMessage("discord-bot.check-accounts-button", "‡πÄ‡∏ä‡πá‡∏Ñ‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡∏Ç‡∏≠‡∏á‡∏â‡∏±‡∏ô")
    
    // Status command messages (formerly mc-check)
    fun getMcCheckTitle(): String = getMessage("discord-bot.status.title", "üîç ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡πÇ‡∏¢‡∏á‡∏ö‡∏±‡∏ç‡∏ä‡∏µ")
    fun getMcCheckErrorNoUser(): String = getMessage("discord-bot.status.error-no-user", "‚ùå ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏∞‡∏ö‡∏∏‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô")
    fun getMcCheckDiscordUserLabel(): String = getMessage("discord-bot.status.discord-user-label", "üë§ Discord User")
    fun getMcCheckDiscordIdLabel(): String = getMessage("discord-bot.status.discord-id-label", "üÜî Discord ID")
    fun getMcCheckStatusLabel(): String = getMessage("discord-bot.status.status-label", "‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞")
    fun getMcCheckStatusNotLinked(): String = getMessage("discord-bot.status.status-not-linked", "‚ùå ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ö‡∏±‡∏ç‡∏ä‡∏µ Minecraft ‡∏ó‡∏µ‡πà‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡πÇ‡∏¢‡∏á")
    fun getMcCheckStatusLinked(): String = getMessage("discord-bot.status.status-linked", "‚úÖ ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡πÇ‡∏¢‡∏á‡πÅ‡∏•‡πâ‡∏ß")
    fun getMcCheckStatusLinkedCount(): String = getMessage("discord-bot.status.status-linked-count", "‚úÖ ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡πÇ‡∏¢‡∏á‡πÅ‡∏•‡πâ‡∏ß ({count})")
    fun getMcCheckStatusNotLinkedShort(): String = getMessage("discord-bot.status.status-not-linked-short", "‚ùå ‡πÑ‡∏°‡πà‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡πÇ‡∏¢‡∏á")
    fun getMcCheckMinecraftAccountsLabel(): String = getMessage("discord-bot.status.minecraft-accounts-label", "üéÆ ‡∏ö‡∏±‡∏ç‡∏ä‡∏µ Minecraft ‡∏ó‡∏µ‡πà‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡πÇ‡∏¢‡∏á ({count})")
    fun getMcCheckFirstLinkDateLabel(): String = getMessage("discord-bot.status.first-link-date-label", "üìÖ ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡πÇ‡∏¢‡∏á‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡πÅ‡∏£‡∏Å‡πÄ‡∏°‡∏∑‡πà‡∏≠")
    fun getMcCheckMinecraftLabel(): String = getMessage("discord-bot.status.minecraft-label", "üéÆ Minecraft")
    fun getMcCheckUuidLabel(): String = getMessage("discord-bot.status.uuid-label", "üÜî UUID")
    fun getMcCheckDiscordLabel(): String = getMessage("discord-bot.status.discord-label", "üë§ Discord")
    fun getMcCheckLinkedAtLabel(): String = getMessage("discord-bot.status.linked-at-label", "üìÖ ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡πÇ‡∏¢‡∏á‡πÄ‡∏°‡∏∑‡πà‡∏≠")
    fun getMcCheckOtherAccountsLabel(): String = getMessage("discord-bot.status.other-accounts-label", "üîó ‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡∏≠‡∏∑‡πà‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡πÇ‡∏¢‡∏á")
    fun getMcCheckStatusLinkedNoDetails(): String = getMessage("discord-bot.status.status-linked-no-details", "‚ö†Ô∏è ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡πÇ‡∏¢‡∏á‡πÅ‡∏•‡πâ‡∏ß (‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î)")
    fun getMcCheckStatusNotLinkedMc(): String = getMessage("discord-bot.status.status-not-linked-mc", "‚ùå ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡πÇ‡∏¢‡∏á")
    fun getMcCheckPendingCodeLabel(): String = getMessage("discord-bot.status.pending-code-label", "‚è≥ ‡∏£‡∏´‡∏±‡∏™‡∏£‡∏≠‡∏Å‡∏≤‡∏£‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô")
    fun getMcCheckNotFoundMcPlayer(): String = getMessage("discord-bot.status.not-found-mc-player", "‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô Minecraft")
    fun getMcCheckFoundSimilarDiscord(): String = getMessage("discord-bot.status.found-similar-discord", "üîç ‡∏û‡∏ö Discord users ‡∏ó‡∏µ‡πà‡∏Ñ‡∏•‡πâ‡∏≤‡∏¢‡∏Å‡∏±‡∏ô:")
    fun getMcCheckNotFoundBoth(): String = getMessage("discord-bot.status.not-found-both", "‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö")
    fun getMcCheckNotFoundMessage(): String = getMessage("discord-bot.status.not-found-message", "‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô Minecraft ‡∏´‡∏£‡∏∑‡∏≠ Discord user: {user}")
    
    // Check accounts button messages
    fun getCheckAccountsNoAccountsTitle(): String = getMessage("discord-bot.check-accounts.no-accounts-title", "‚ùå **‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡∏ó‡∏µ‡πà‡∏ú‡∏π‡∏Å‡πÑ‡∏ß‡πâ**")
    fun getCheckAccountsNoAccountsMessage(): String = getMessage("discord-bot.check-accounts.no-accounts-message", "‡∏Ñ‡∏∏‡∏ì‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏ú‡∏π‡∏Å‡∏ö‡∏±‡∏ç‡∏ä‡∏µ Minecraft ‡∏Å‡∏±‡∏ö Discord ‡∏ô‡∏µ‡πâ")
    fun getCheckAccountsTitle(): String = getMessage("discord-bot.check-accounts.title", "üîó ‡∏ö‡∏±‡∏ç‡∏ä‡∏µ Minecraft ‡∏ó‡∏µ‡πà‡∏ú‡∏π‡∏Å‡πÑ‡∏ß‡πâ")
    fun getCheckAccountsDescription(): String = getMessage("discord-bot.check-accounts.description", "‡∏ö‡∏±‡∏ç‡∏ä‡∏µ Discord ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡∏ú‡∏π‡∏Å‡∏Å‡∏±‡∏ö‡∏ö‡∏±‡∏ç‡∏ä‡∏µ Minecraft ‡∏î‡∏±‡∏á‡∏ô‡∏µ‡πâ:")
    fun getCheckAccountsAccountNumber(): String = getMessage("discord-bot.check-accounts.account-number", "‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡∏ó‡∏µ‡πà {number}")
    fun getCheckAccountsFooter(): String = getMessage("discord-bot.check-accounts.footer", "‡∏£‡∏ß‡∏° {count} ‡∏ö‡∏±‡∏ç‡∏ä‡∏µ | ‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î {max} ‡∏ö‡∏±‡∏ç‡∏ä‡∏µ")
    
    // Verification messages
    fun getVerificationAccountAgeError(): String = getMessage("discord-bot.verification.account-age-error", "‚ùå ‡∏ö‡∏±‡∏ç‡∏ä‡∏µ Discord ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡∏ï‡πâ‡∏≠‡∏á‡∏≠‡∏≤‡∏¢‡∏∏‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ô‡πâ‡∏≠‡∏¢ {min} ‡∏ß‡∏±‡∏ô")
    fun getVerificationServerJoinError(): String = getMessage("discord-bot.verification.server-join-error", "‚ùå ‡∏Ñ‡∏∏‡∏ì‡∏ï‡πâ‡∏≠‡∏á‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ô‡πâ‡∏≠‡∏¢ {min} ‡∏ô‡∏≤‡∏ó‡∏µ")
    
    // Minecraft command messages
    fun getCmdNoPermission(): String = getMessage("minecraft-commands.no-permission", "¬ßcYou don't have permission to use this command.")
    fun getCmdRequiredPermission(): String = getMessage("minecraft-commands.required-permission", "¬ß7Required permission: mcdiscordlink.admin")
    fun getCmdUsageMain(): String = getMessage("minecraft-commands.usage-main", "¬ßeUsage: /mclink <reload|check|unlink> [player]")
    fun getCmdAvailableCommands(): String = getMessage("minecraft-commands.available-commands", "¬ß7Available commands:")
    fun getCmdReload(): String = getMessage("minecraft-commands.cmd-reload", "¬ß7  /mclink reload - Reload plugin")
    fun getCmdCheck(): String = getMessage("minecraft-commands.cmd-check", "¬ß7  /mclink check <player> - Check player link status")
    fun getCmdUnlink(): String = getMessage("minecraft-commands.cmd-unlink", "¬ß7  /mclink unlink - Unlink your account (players only)")
    fun getCmdReloadSuccess(): String = getMessage("minecraft-commands.reload-success", "¬ßa‚úÖ MCDiscordLink reloaded successfully!")
    fun getCmdReloadFailed(): String = getMessage("minecraft-commands.reload-failed", "¬ßc‚ùå Failed to reload: {error}")
    fun getCmdCheckUsage(): String = getMessage("minecraft-commands.check-usage", "¬ßeUsage: /mclink check <player>")
    fun getCmdCheckPlayerNotFound(): String = getMessage("minecraft-commands.check-player-not-found", "¬ßcPlayer not found: {player}")
    fun getCmdCheckLinked(): String = getMessage("minecraft-commands.check-linked", "¬ßa‚úÖ {player} is linked:")
    fun getCmdCheckDiscordId(): String = getMessage("minecraft-commands.check-discord-id", "¬ß7  Discord ID: {discord-id}")
    fun getCmdCheckDiscordName(): String = getMessage("minecraft-commands.check-discord-name", "¬ß7  Discord Name: {discord-name}")
    fun getCmdCheckLinkedAt(): String = getMessage("minecraft-commands.check-linked-at", "¬ß7  Linked At: {date}")
    fun getCmdCheckLinkedNoDetails(): String = getMessage("minecraft-commands.check-linked-no-details", "¬ßa‚úÖ {player} is linked (details unavailable)")
    fun getCmdCheckNotLinked(): String = getMessage("minecraft-commands.check-not-linked", "¬ßc‚ùå {player} is not linked")
    fun getCmdCheckPendingCode(): String = getMessage("minecraft-commands.check-pending-code", "¬ße‚è≥ Pending code: {code}")
    fun getCmdUnlinkPlayersOnly(): String = getMessage("minecraft-commands.unlink-players-only", "¬ßcThis command can only be used by players!")
    fun getCmdUnlinkNotLinked(): String = getMessage("minecraft-commands.unlink-not-linked", "¬ßc‚ùå Your account is not linked to Discord!")
    fun getCmdUnlinkSuccess(): String = getMessage("minecraft-commands.unlink-success", "¬ßa‚úÖ ‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡πÇ‡∏¢‡∏á Discord ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡∏ñ‡∏π‡∏Å‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡πÅ‡∏•‡πâ‡∏ß!")
    fun getCmdUnlinkWarning(): String = getMessage("minecraft-commands.unlink-warning", "¬ße‚ö†Ô∏è ‡∏Ñ‡∏∏‡∏ì‡∏à‡∏∞‡∏ñ‡∏π‡∏Å‡πÄ‡∏ï‡∏∞‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå‡πÉ‡∏ô 5 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ...")
    fun getCmdUnlinkCountdown(): String = getMessage("minecraft-commands.unlink-countdown", "¬ßc{seconds}...")
    fun getCmdUnlinkKickMessage(): String = getMessage("minecraft-commands.unlink-kick-message", "¬ßc‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡πÇ‡∏¢‡∏á Discord ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡∏ñ‡∏π‡∏Å‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡πÅ‡∏•‡πâ‡∏ß")
    fun getCmdUnlinkFailed(): String = getMessage("minecraft-commands.unlink-failed", "¬ßc‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡πÇ‡∏¢‡∏á‡πÑ‡∏î‡πâ")
    fun getCmdUnknownCommand(): String = getMessage("minecraft-commands.unknown-command", "¬ßcUnknown subcommand: {command}")
    
    // System log messages
    fun getLogPluginEnabled(): String = getMessage("system-logs.plugin-enabled", "MCDiscordLink enabled - Use /setup-link-discord in Discord")
    fun getLogPluginDisabled(): String = getMessage("system-logs.plugin-disabled", "MCDiscordLink disabled")
    fun getLogPluginReloadSuccess(): String = getMessage("system-logs.plugin-reload-success", "MCDiscordLink reloaded successfully")
    fun getLogPluginReloadFailed(): String = getMessage("system-logs.plugin-reload-failed", "Failed to reload plugin: {error}")
    fun getLogDatabaseConnected(): String = getMessage("system-logs.database-connected", "Database connected successfully")
    fun getLogDatabaseConnectionFailed(): String = getMessage("system-logs.database-connection-failed", "Database connection failed: {error}")
    fun getLogDatabaseDisabled(): String = getMessage("system-logs.database-disabled", "Database is disabled in config ‚Äî plugin requires database")
    fun getLogDatabaseInitFailed(): String = getMessage("system-logs.database-init-failed", "Database initialization failed ‚Äî disabling plugin")
    fun getLogDiscordBotStarted(): String = getMessage("system-logs.discord-bot-started", "Discord bot started successfully")
    fun getLogDiscordBotJdaConflict(): String = getMessage("system-logs.discord-bot-jda-conflict", "JDA class loading conflict! Server restart required.")
    fun getLogDiscordBotNoReload(): String = getMessage("system-logs.discord-bot-no-reload", "Cannot reload plugins that use JDA. Please restart the server.")
    fun getLogDiscordBotStartFailed(): String = getMessage("system-logs.discord-bot-start-failed", "Failed to start Discord bot: {error}")
    fun getLogDiscordBotStopError(): String = getMessage("system-logs.discord-bot-stop-error", "Error stopping JDA: {error}")
    fun getLogDiscordBotClassConflict(): String = getMessage("system-logs.discord-bot-class-conflict", "Class loading conflict detected! Please restart the server instead of using reload.")
    fun getLogDiscordBotClassConflictHelp(): String = getMessage("system-logs.discord-bot-class-conflict-help", "This usually happens when reloading plugins with JDA. Use '/stop' then start the server.")
    fun getLogCommandMclinkRegistered(): String = getMessage("system-logs.command-mclink-registered", "‚úÖ Command /mclink registered successfully")
    fun getLogCommandMclinkFailed(): String = getMessage("system-logs.command-mclink-failed", "‚ùå Failed to register /mclink command - command not found in plugin.yml")
    fun getLogCommandRegistrationError(): String = getMessage("system-logs.command-registration-error", "‚ùå Exception while registering commands: {error}")
    fun getLogLinkSuccessConsole(): String = getMessage("system-logs.link-success-console", "Successfully linked {minecraft} ({uuid}) with Discord {discord} ({discord-id})")
    fun getLogLinkSuccessEmbedTitle(): String = getMessage("system-logs.link-success-embed-title", "üîó Account Linked")
    fun getLogLinkSuccessEmbedMinecraft(): String = getMessage("system-logs.link-success-embed-minecraft", "Minecraft")
    fun getLogLinkSuccessEmbedDiscord(): String = getMessage("system-logs.link-success-embed-discord", "Discord")
    fun getLogLinkSuccessEmbedTotal(): String = getMessage("system-logs.link-success-embed-total", "Total Accounts")
    fun getLogRoleAddedSuccess(): String = getMessage("system-logs.role-added-success", "Added role {role} to {discord}")
    fun getLogRoleAddFailed(): String = getMessage("system-logs.role-add-failed", "Failed to add role to {discord}: {error}")
    fun getLogRoleNotFound(): String = getMessage("system-logs.role-not-found", "Role with ID {role-id} not found")
    fun getLogRoleAddError(): String = getMessage("system-logs.role-add-error", "Error adding role to {discord}: {error}")
    fun getLogChannelNotFound(): String = getMessage("system-logs.log-channel-not-found", "Log channel with ID {channel-id} not found")
    fun getLogMessageError(): String = getMessage("system-logs.log-message-error", "Error sending log message: {error}")
    fun getLogMclinkCommandExecuted(): String = getMessage("system-logs.mclink-command-executed", "MCLink command executed by {sender} with args: {args}")
    fun getLogReloadCommandFailed(): String = getMessage("system-logs.reload-command-failed", "Reload failed: {error}")
    
    // Debug messages
    fun getDebugPlayerLinkedError(): String = getMessage("system-logs.debug-player-linked-error", "isPlayerLinked error: {error}")
    fun getDebugGenerateCodeError(): String = getMessage("system-logs.debug-generate-code-error", "generateAndStoreCode error: {error}")
    fun getDebugVerifyCodeError(): String = getMessage("system-logs.debug-verify-code-error", "verifyCodeAndGetPlayer error: {error}")
    fun getDebugAccountCountError(): String = getMessage("system-logs.debug-account-count-error", "getAccountCountForDiscord error: {error}")
    fun getDebugLinkAccountError(): String = getMessage("system-logs.debug-link-account-error", "linkAccount error: {error}")
    fun getDebugGetLinkInfoError(): String = getMessage("system-logs.debug-get-link-info-error", "getLinkInfo error: {error}")
    fun getDebugPendingCodeError(): String = getMessage("system-logs.debug-pending-code-error", "getPendingCode error: {error}")
    fun getDebugUnlinkAccountError(): String = getMessage("system-logs.debug-unlink-account-error", "unlinkAccount error: {error}")
    fun getDebugGetAccountsError(): String = getMessage("system-logs.debug-get-accounts-error", "getAccountsForDiscord error: {error}")
    fun getDebugCodeGenerationFailed(): String = getMessage("system-logs.debug-code-generation-failed", "Failed to generate unique code after 100 attempts")
    
    // Utility function for placeholder replacement
    fun replacePlaceholders(text: String, placeholders: Map<String, String>): String {
        var result = text
        placeholders.forEach { (key, value) ->
            result = result.replace("{$key}", value)
        }
        return result
    }
}